name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs: 
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.2'

      - name: Create cache directory
        run: mkdir -p voting-api/vendor/bundle

      - name: Cache gems
        uses: actions/cache@v3
        with:
          path: voting-api/vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install dependencies
        run: |
          cd voting-api
          gem install bundler
          bundle config set --local deployment 'true'
          bundle config set --local path 'vendor/bundle'
          bundle install --jobs 4 --retry 3

  setup-db:
    name: Setup Database
    runs-on: ubuntu-latest
    needs: setup
    services:
      db:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
            --health-cmd "pg_isready -U postgres"
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

    steps:
      - name: Setup Database
        run: |
          cd voting-api
          cp config/database.yml.ci config/database.yml
          RAILS_ENV=test bin/rails db:create db:migrate db:seed db:schema:load

  setup-redis:
    name: Setup Redis and Sidekiq
    runs-on: ubuntu-latest
    needs: setup-db
    services:
      redis:
        image: redis:6.2
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Start Sidekiq
        run: |
          cd voting-api
          RAILS_ENV=test bundle exec sidekiq -C config/sidekiq.yml &
          sleep 5
          if ! pgrep -f sidekiq; then
            echo "Sidekiq failed to start"
            exit 1
          fi

  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: setup-redis
    steps:
      - name: Run RSpec tests
        run: |
          cd voting-api
          RAILS_ENV=test bundle exec rspec
